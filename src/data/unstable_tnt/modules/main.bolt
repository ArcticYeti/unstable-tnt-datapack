from contextlib import contextmanager
from crankshaft:api import Listener
from crankshaft:events import on_tick
from crankshaft:flags import is_sneaking
from lightning_rod:api import random, get_gametime
from wicked_expressions:api import Data, StaticVar, Var, String, Bool, List, Double, this
from ./events import on_place_tripwire_on_normal_tnt, on_break_tnt
from ./raycast import raycast, stop_raycast
from ./utils import mc_return, summon

AIR_TOGGLED_ENTITY = 'unstable_tnt.air_toggled'

def place_unstable_tnt():
    playsound minecraft:item.spyglass.use master @a ~ ~ ~ 1 0
    playsound minecraft:item.spyglass.use master @a ~ ~ ~ 1 0.25
    playsound minecraft:item.spyglass.use master @a ~ ~ ~ 1 0.50

    setblock ~ ~ ~ tnt[unstable=true]

@contextmanager
def block_drops_disabled():
    is_tiledrops_enabled = StaticVar(Bool)
    with is_tiledrops_enabled.store():
        gamerule doTileDrops

    gamerule doTileDrops false

    yield

    if is_tiledrops_enabled:
        gamerule doTileDrops true

def get_tripwire_facing_direction():
    output = Var(String)
    
    for direction in ['north', 'west', 'south', 'east']:
        if block ~ ~ ~ tripwire_hook[facing=direction]:
            output = direction

    return output

def create_vanilla_tnt_drop():
    summon item ~ ~0.5 ~ {Item: {id: 'minecraft:tnt', Count: 1b}, Tags: [AIR_TOGGLED_ENTITY], Motion: [0.0d, 0.2d, 0.0d]}:
        new_motion = StaticVar(List)
        new_motion = [Double(0.0), Double(0.0), Double(0.0)]
        vertical_motion = 0.2
        max_horizontal_motion = 1000
        new_motion[0] = (Data.cast(random(-max_horizontal_motion, max_horizontal_motion) / 10000, 'double'))
        new_motion[1] = (Double(vertical_motion))
        new_motion[2] = (Data.cast(random(-max_horizontal_motion, max_horizontal_motion) / 10000, 'double'))

        this.Motion = new_motion

@Listener(on_tick)
def _():
    as @e[type=item, tag=AIR_TOGGLED_ENTITY]:
        this.Air = get_gametime()

@Listener(on_place_tripwire_on_normal_tnt)
def _():
    if is_sneaking:
        mc_return()

    anchored eyes:
        with raycast(6, 0.001):
            if block ~ ~ ~ minecraft:tripwire_hook align xyz positioned ~0.5 ~ ~0.5:
                stop_raycast()

                tripwire_facing = get_tripwire_facing_direction()

                # destroys the tripwire
                with block_drops_disabled():
                    setblock ~ ~ ~ air destroy

                if tripwire_facing == 'north':
                    positioned ~ ~ ~1:
                        place_unstable_tnt()
                elif tripwire_facing == 'west':
                    positioned ~1 ~ ~:
                        place_unstable_tnt()
                elif tripwire_facing == 'south':
                    positioned ~ ~ ~-1:
                        place_unstable_tnt()
                elif tripwire_facing == 'east':
                    positioned ~-1 ~ ~:
                        place_unstable_tnt()

@Listener(on_break_tnt)
def _():
    unless data entity @s {"SelectedItem":{"id": "minecraft:shears"}}:
        mc_return()

    as @e[type=tnt, distance=..7.0, nbt={Fuse: 80s}, limit=1, sort=nearest] at @s:
        as @a[distance=..24.0]:
            stopsound @s * minecraft:entity.tnt.primed

        create_vanilla_tnt_drop()
        kill @s
